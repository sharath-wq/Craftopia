<!-- Checkout Area Start -->
<div class="checkout-area ptb-100">
    <div class="container">
        <form action="/checkout/place-order" method="post">
            <div class="row">
                <div class="col-lg-6 col-md-12 col-12">
                    <div class="checkbox-form">
                        <div class="d-flex">
                            <h3>Select Address</h3>
                            <a href="/user/address/add" class="btn btn-sm btn-dark" title="Add New Address">Add</a>
                        </div>

                        <div class="different-address">
                            <div id="" class="row">
                                <% if (address && address.length) { %> <% address.forEach((item, index) => { %>
                                <div class="col-md-8 mb-3">
                                    <div class="card">
                                        <div class="card-body">
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="addressId" id="address<%=
                                                index %>" value="<%= item._id %>" required <%= index === 0 ? "checked" : ""
                                                %> />
                                                <label class="form-check-label" for="address<%= index %>">
                                                    <h5 class="card-title"><%= item.title %></h5>
                                                    <p class="card-text">
                                                        <%= item.street %>, <%= item.city %>, <%= item.state %>, <%=
                                                        item.pincode %>
                                                    </p>
                                                    <p class="card-text">Mobile: +91 <%= item.mobile %></p>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <% }) %> <% } else { %> No Address Found
                                <a class="btn btn-dark h-auto" href="/user/address/add">Add Address</a>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-md-12 col-12">
                    <div class="your-order">
                        <h3>Your order</h3>
                        <input
                            type="hidden"
                            id="originalCartData"
                            name="currentCartData"
                            value="<%= JSON.stringify(cartData) %>"
                        />
                        <div class="your-order-table table-responsive">
                            <table>
                                <thead>
                                    <tr>
                                        <th class="product-name">Product</th>
                                        <th class="product-total">Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% product.forEach(item => { %>
                                    <tr class="cart_item">
                                        <td class="product-name">
                                            <% if (item.product.title.length > 36) { %>
                                            <small><%= item.product.title.substring(0, 36) + '...' %></small> <% } else { %>
                                            <small><%= item.product.title %></small> <% } %>
                                            <strong class="product-quantity"> × <%= item.quantity %></strong>
                                        </td>

                                        <td class="product-total">
                                            <span class="amount">₹ <%= item.product.salePrice * item.quantity %></span>
                                        </td>
                                    </tr>
                                    <% }) %>
                                </tbody>
                                <tfoot>
                                    <tr class="cart-subtotal">
                                        <th>Cart Subtotal</th>
                                        <td><span class="amount">₹ <%= subtotal %></span></td>
                                    </tr>
                                    <tr class="cart-tax">
                                        <th>Tax and Other Charges</th>
                                        <td><span class="amount">₹ <%= tax %></span></td>
                                    </tr>
                                    <tr class="order-total">
                                        <th>Order Total</th>
                                        <td>
                                            <strong><span class="amount">₹ <%= total %></span></strong>
                                        </td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                        <div class="payment-method">
                            <div class="payment-accordion">
                                <div class="payment-method">
                                    <label for="payment-method-select">Select Payment Method:</label>
                                </div>
                                <% if (address && address.length) { %>
                                <div class="order-button-payment d-flex flex-column gap-2">
                                    <button
                                        type="button"
                                        class="btn btn-dark h-auto rounded-0 fw-bold"
                                        style="padding: 12px"
                                        id="cod-button"
                                    >
                                        CASH ON DELIVERY
                                    </button>
                                    <button
                                        class="btn btn-primary h-auto rounded-0 fw-bold"
                                        style="padding: 12px"
                                        type="button"
                                        id="rzp-button"
                                        value="submit"
                                    >
                                        Pay with Razorypay
                                    </button>
                                </div>
                                <% } else { %> <span class="text-danger">Please Add an Address</span> <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Checkout Area End -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    let selectedAddressId = null;
    document.addEventListener("DOMContentLoaded", () => {
        const form = document.querySelector("form");
        const rzpBtn = document.getElementById("rzp-button");
        const codBtn = document.getElementById("cod-button");
        const addressRadios = document.querySelectorAll('input[name="addressId"]');

        const firstRadio = document.querySelector('input[name="addressId"]:checked');
        if (firstRadio) {
            selectedAddressId = firstRadio.value;
        }

        addressRadios.forEach((radio) => {
            radio.addEventListener("change", (event) => {
                selectedAddressId = event.target.value;
            });
        });

        codBtn.addEventListener("click", handleCodButtonClick);
        rzpBtn.addEventListener("click", handleRzpButtonClick);
    });

    async function handleCodButtonClick(event) {
        event.preventDefault();
        if (await checkCartData()) {
            const data = {
                addressId: selectedAddressId,
                payment_method: "cash_on_delivery",
            };
            await placeOrder("/checkout/place-order", data);
        }
    }

    async function handleRzpButtonClick() {
        if (await checkCartData()) {
            const data = {
                addressId: selectedAddressId,
                payment_method: "online_payment",
            };
            await placeOrder("/checkout/place-order", data);
        }
    }

    async function placeOrder(url, data) {
        try {
            const response = await fetch(url, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(data),
            });
            if (!response.ok) {
                throw new Error("Network response was not ok");
            }
            const responseData = await response.json();
            if (data.payment_method === "cash_on_delivery") {
                handleCodPayment(responseData);
            } else if (data.payment_method === "online_payment") {
                handleRzpPayment(responseData);
            }
        } catch (error) {
            handleError(error);
        }
    }

    async function checkCartData() {
        try {
            const originalCartData = JSON.parse(document.getElementById("originalCartData").value);
            const response = await fetch("/checkout/get");

            if (!response.ok) {
                throw new Error("Network response was not ok");
            }

            const currentCartData = await response.json();

            if (currentCartData !== null && compareJSONStrings(originalCartData, currentCartData)) {
                showCartConfirmation();
                return false;
            }

            return true;
        } catch (error) {
            handleError(error);
        }
    }

    function compareJSONStrings(jsonString1, jsonString2) {
        return JSON.stringify(jsonString1) !== JSON.stringify(jsonString2);
    }

    function showCartConfirmation() {
        Swal.fire({
            title: "Cart Confirmation",
            text: "Your cart has changed. Do you want to reload the page?",
            icon: "info",
            showCancelButton: true,
            confirmButtonText: "Reload",
            cancelButtonText: "Close",
        }).then((result) => {
            if (result.isConfirmed) {
                proceedToCheckout();
            }
        });
    }

    function proceedToCheckout() {
        window.location.reload();
    }

    function handleCodPayment(responseData) {
        window.location.href = `/checkout/order-placed/${responseData.orderId}`;
    }

    function handleRzpPayment(responseData) {
        const options = {
            key: "rzp_test_4ruq7ozLCdsikN",
            amount: responseData.order.totalPrice * 100,
            currency: "INR",
            name: "Craftopia",
            description: "Test Transaction",
            image: "https://example.com/your_logo.png",
            order_id: responseData.order.id,
            handler: function (response) {
                handleSuccessPayment(response, responseData.orderId);
            },
            prefill: {
                name: responseData.user.firstName,
                email: responseData.user.email,
                contact: responseData.user.mobile,
            },
            notes: {
                address: "Razorpay Corporate Office",
            },
            theme: {
                color: "#000000",
            },
            modal: {
                ondismiss: function () {
                    handlePaymentFailure(responseData.orderId);
                },
            },
        };

        const rzp1 = new Razorpay(options);

        rzp1.on("payment.failed", function (response) {
            handlePaymentFailure(responseData.orderId);
        });

        rzp1.open();
    }

    function handleSuccessPayment(response, orderId) {
        const postData = {
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_order_id: response.razorpay_order_id,
            razorpay_signature: response.razorpay_signature,
            orderId: orderId,
        };

        fetch(`/checkout/verify-payment`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(postData),
        })
            .then((response) => {
                if (response.ok) {
                    return response.json();
                } else {
                    throw new Error("Error fetching data");
                }
            })
            .then((data) => {
                window.location.href = `/checkout/order-placed/${data.orderId}`;
            })
            .catch((error) => {
                handleError(error);
            });
    }

    async function handlePaymentFailure(orderId) {
        try {
            const cancelOrderUrl = `/orders/${orderId}`;
            const requestOptions = {
                method: "PUT",
            };
            const response = await fetch(cancelOrderUrl, requestOptions);

            if (response.ok) {
                console.log("Order cancellation request succeeded.");
                return response.json();
            } else {
                console.error("Order cancellation request failed.");
            }
        } catch (error) {
            handleError(error);
        }
    }

    function handleError(error) {
        console.error("Error:", error);
    }
</script>
